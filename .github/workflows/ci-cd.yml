on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout kode
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependensi
        run: npm install

      - name: Build proyek
        run: npm run build

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout kode
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependensi
        run: npm install

      - name: Jalankan tes
        run: npm test

  push:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout kode
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        env:
          DOCKER_REPO: zidane061/movie_catalog
        run: |
          # Tag branch (misalnya, main) sebagai nama tag
          BRANCH_NAME=${GITHUB_REF##*/}

          # Build Docker image
          docker build -t $DOCKER_REPO:${GITHUB_SHA} .
          docker tag $DOCKER_REPO:${GITHUB_SHA} $DOCKER_REPO:${BRANCH_NAME}

          # Push image dengan tag commit SHA dan nama branch
          docker push $DOCKER_REPO:${GITHUB_SHA}
          docker push $DOCKER_REPO:${BRANCH_NAME}

  deploy-to-kubernetes:
    runs-on: ubuntu-latest
    needs: push
    steps:
      - name: Checkout kode
        uses: actions/checkout@v3

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "v1.26.0"

      - name: Authenticate with Kubernetes cluster
        env:
          KUBE_SERVER: ${{ secrets.KUBE_SERVER }}
          KUBE_TOKEN: ${{ secrets.KUBE_TOKEN }}
        run: |
          kubectl config set-cluster cluster-name --server=$KUBE_SERVER --insecure-skip-tls-verify=true
          kubectl config set-credentials user --token=$KUBE_TOKEN
          kubectl config set-context default --cluster=cluster-name --user=user
          kubectl config use-context default

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f K8/deployment.yaml
          kubectl apply -f K8/service.yaml
          kubectl apply -f K8/hpa.yaml

      - name: Verify Deployment
        run: |
          kubectl get pods
          kubectl get services
